version: '3.9'

services:
  spring-app-1:
    image: anthonybeato/p4-mockupapi:latest
    restart: on-failure
    container_name: app1
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypassword
    depends_on:
      - mysql
    networks:
      - my-network

  spring-app-2:
    image: anthonybeato/p4-mockupapi:latest
    restart: on-failure
    container_name: app2
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypassword
    depends_on:
      - mysql
    networks:
      - my-network

  spring-app-3:
    image: anthonybeato/p4-mockupapi:latest
    restart: on-failure
    container_name: app3
    ports:
      - "8083:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypassword
    depends_on:
      - mysql
    networks:
      - my-network

  mysql:
    image: mysql:8.0.23
    container_name: db-1
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysecretpassword
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    networks:
      - my-network
    volumes:
      - mysql-data:/var/lib/mysql

  haproxy:
    image: haproxy
    container_name: haproxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg

    depends_on:
      - spring-app-1
      - spring-app-2
      - spring-app-3
    networks:
      - my-network

networks:
  my-network:

volumes:
  mysql-data: